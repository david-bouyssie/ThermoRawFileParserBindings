/**
 * ----------------------------------------------------------------------------
 * <auto-generated>
 * This is autogenerated code by Embeddinator-4000.
 * Do not edit this file or all your changes will be lost after re-generation.
 * </auto-generated>
 * ----------------------------------------------------------------------------
 */
package thermorawfileparser.thermorawfileparser.writer.mzml;

import mono.embeddinator.*;
import com.sun.jna.*;

public final class IndexTypeName {
    public static final IndexTypeName spectrum = new IndexTypeName((int)0);
    public static final IndexTypeName chromatogram = new IndexTypeName((int)1);

    private final int id;
    IndexTypeName(int id) { this.id = id; }
    public int getValue() { return id; }

    public static IndexTypeName fromOrdinal(int n) {
        return valuesMap.containsKey(n) ? valuesMap.get(n) : new IndexTypeName(n);
    }

    private static final java.util.Map<Integer, IndexTypeName> valuesMap = 
        new java.util.HashMap<Integer, IndexTypeName>();

    static {
        try {
            java.lang.reflect.Field[] constants = IndexTypeName.class.getFields();
            for (final java.lang.reflect.Field field : constants) {
                IndexTypeName item = (IndexTypeName) field.get(null);
                valuesMap.put(item.getValue(), item);
            }
        } catch(java.lang.IllegalAccessException ex) {
        }
    }
}
