/**
 * ----------------------------------------------------------------------------
 * <auto-generated>
 * This is autogenerated code by Embeddinator-4000.
 * Do not edit this file or all your changes will be lost after re-generation.
 * </auto-generated>
 * ----------------------------------------------------------------------------
 */
package thermorawfileparser.thermorawfileparser.writer;

import mono.embeddinator.*;
import com.sun.jna.*;

public class SpectrumWrapper {
    public com.sun.jna.Pointer __object;

    public SpectrumWrapper(com.sun.jna.Pointer object) { this.__object = object; }

    public int getPeaksCount() {
        int __ret = thermorawfileparser.Native_ThermoRawFileParser.INSTANCE.ThermoRawFileParser_Writer_SpectrumWrapper_getPeaksCount(__object);
        mono.embeddinator.Runtime.checkExceptions();
        return __ret;
    }

    public double getMzValue(int pos) {
        double __ret = thermorawfileparser.Native_ThermoRawFileParser.INSTANCE.ThermoRawFileParser_Writer_SpectrumWrapper_GetMzValue(__object, pos);
        mono.embeddinator.Runtime.checkExceptions();
        return __ret;
    }

    public double getIntensityValue(int pos) {
        double __ret = thermorawfileparser.Native_ThermoRawFileParser.INSTANCE.ThermoRawFileParser_Writer_SpectrumWrapper_GetIntensityValue(__object, pos);
        mono.embeddinator.Runtime.checkExceptions();
        return __ret;
    }

    public void copyMzListToPointer(long ptrAddress) {
        thermorawfileparser.Native_ThermoRawFileParser.INSTANCE.ThermoRawFileParser_Writer_SpectrumWrapper_CopyMzListToPointer(__object, ptrAddress);
        mono.embeddinator.Runtime.checkExceptions();
    }

    public void copyIntensityListToPointer(long ptrAddress) {
        thermorawfileparser.Native_ThermoRawFileParser.INSTANCE.ThermoRawFileParser_Writer_SpectrumWrapper_CopyIntensityListToPointer(__object, ptrAddress);
        mono.embeddinator.Runtime.checkExceptions();
    }

    public void copyDataToPointers(long mzPtrAddress, long intensityPtrAddress) {
        thermorawfileparser.Native_ThermoRawFileParser.INSTANCE.ThermoRawFileParser_Writer_SpectrumWrapper_CopyDataToPointers(__object, mzPtrAddress, intensityPtrAddress);
        mono.embeddinator.Runtime.checkExceptions();
    }

    public thermorawfileparser.thermorawfileparser.writer.mzml.SpectrumType getSpectrum() {
        com.sun.jna.Pointer __ret = thermorawfileparser.Native_ThermoRawFileParser.INSTANCE.ThermoRawFileParser_Writer_SpectrumWrapper_get_Spectrum(__object);
        mono.embeddinator.Runtime.checkExceptions();
        return (__ret == com.sun.jna.Pointer.NULL ? null : new thermorawfileparser.thermorawfileparser.writer.mzml.SpectrumType(__ret));
    }

    public void setSpectrum(thermorawfileparser.thermorawfileparser.writer.mzml.SpectrumType value) {
        thermorawfileparser.Native_ThermoRawFileParser.INSTANCE.ThermoRawFileParser_Writer_SpectrumWrapper_set_Spectrum(__object, value == null ? null : value.__object);
        mono.embeddinator.Runtime.checkExceptions();
    }
}
