/**
 * ----------------------------------------------------------------------------
 * <auto-generated>
 * This is autogenerated code by Embeddinator-4000.
 * Do not edit this file or all your changes will be lost after re-generation.
 * </auto-generated>
 * ----------------------------------------------------------------------------
 */
package thermorawfileparser.thermorawfileparser.writer;

import mono.embeddinator.*;
import com.sun.jna.*;

public class MzMlSpectrumWriter extends thermorawfileparser.thermorawfileparser.writer.SpectrumWriter {
    public MzMlSpectrumWriter(com.sun.jna.Pointer object) { super(object); }

    public MzMlSpectrumWriter(thermorawfileparser.thermorawfileparser.RawFileWrapper rawFileWrapper) {
        super((com.sun.jna.Pointer)null);
        __object = thermorawfileparser.Native_ThermoRawFileParser.INSTANCE.ThermoRawFileParser_Writer_MzMlSpectrumWriter_new(rawFileWrapper == null ? null : rawFileWrapper.__object);
        mono.embeddinator.Runtime.checkExceptions();
    }

    public thermorawfileparser.thermorawfileparser.writer.SpectrumWrapper getSpectrumWrapper() {
        com.sun.jna.Pointer __ret = thermorawfileparser.Native_ThermoRawFileParser.INSTANCE.ThermoRawFileParser_Writer_MzMlSpectrumWriter_getSpectrumWrapper(__object);
        mono.embeddinator.Runtime.checkExceptions();
        return (__ret == com.sun.jna.Pointer.NULL ? null : new thermorawfileparser.thermorawfileparser.writer.SpectrumWrapper(__ret));
    }

    public java.lang.String getInMemoryStreamAsString() {
        java.lang.String __ret = thermorawfileparser.Native_ThermoRawFileParser.INSTANCE.ThermoRawFileParser_Writer_MzMlSpectrumWriter_GetInMemoryStreamAsString(__object);
        mono.embeddinator.Runtime.checkExceptions();
        return __ret;
    }

    public void resetWriter(boolean callGC) {
        thermorawfileparser.Native_ThermoRawFileParser.INSTANCE.ThermoRawFileParser_Writer_MzMlSpectrumWriter_ResetWriter(__object, (byte)(callGC? 1 : 0));
        mono.embeddinator.Runtime.checkExceptions();
    }

    public void write(int firstScanNumber, int lastScanNumber) {
        thermorawfileparser.Native_ThermoRawFileParser.INSTANCE.ThermoRawFileParser_Writer_MzMlSpectrumWriter_Write(__object, firstScanNumber, lastScanNumber);
        mono.embeddinator.Runtime.checkExceptions();
    }

    public void createXmlWriter() {
        thermorawfileparser.Native_ThermoRawFileParser.INSTANCE.ThermoRawFileParser_Writer_MzMlSpectrumWriter_CreateXmlWriter(__object);
        mono.embeddinator.Runtime.checkExceptions();
    }

    public void createXmlWriter(boolean omitXmlDeclaration) {
        thermorawfileparser.Native_ThermoRawFileParser.INSTANCE.ThermoRawFileParser_Writer_MzMlSpectrumWriter_CreateXmlWriter_1(__object, (byte)(omitXmlDeclaration? 1 : 0));
        mono.embeddinator.Runtime.checkExceptions();
    }

    public void writeHeader(int firstScanNumber, int lastScanNumber) {
        thermorawfileparser.Native_ThermoRawFileParser.INSTANCE.ThermoRawFileParser_Writer_MzMlSpectrumWriter_WriteHeader(__object, firstScanNumber, lastScanNumber);
        mono.embeddinator.Runtime.checkExceptions();
    }

    public void writeSpectrumNoReturn(int scanNumber, int index, boolean serializeBinaryData) {
        thermorawfileparser.Native_ThermoRawFileParser.INSTANCE.ThermoRawFileParser_Writer_MzMlSpectrumWriter_WriteSpectrumNoReturn(__object, scanNumber, index, (byte)(serializeBinaryData? 1 : 0));
        mono.embeddinator.Runtime.checkExceptions();
    }

    public thermorawfileparser.thermorawfileparser.writer.SpectrumWrapper writeSpectrum(int scanNumber, int index, boolean serializeBinaryData) {
        com.sun.jna.Pointer __ret = thermorawfileparser.Native_ThermoRawFileParser.INSTANCE.ThermoRawFileParser_Writer_MzMlSpectrumWriter_WriteSpectrum(__object, scanNumber, index, (byte)(serializeBinaryData? 1 : 0));
        mono.embeddinator.Runtime.checkExceptions();
        return (__ret == com.sun.jna.Pointer.NULL ? null : new thermorawfileparser.thermorawfileparser.writer.SpectrumWrapper(__ret));
    }

    public void writeFooter() {
        thermorawfileparser.Native_ThermoRawFileParser.INSTANCE.ThermoRawFileParser_Writer_MzMlSpectrumWriter_WriteFooter(__object);
        mono.embeddinator.Runtime.checkExceptions();
    }
}
